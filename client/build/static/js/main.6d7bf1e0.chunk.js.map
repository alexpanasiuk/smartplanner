{"version":3,"sources":["components/home/home.module.css","reducers/index.js","reducers/user_reducer.js","reducers/projects_reducer.js","actions/index.js","components/forms/login.js","hoc/popup/popup.js","containers/login/index.js","components/forms/register.js","containers/register/index.js","components/home/home.js","components/forms/addTask.js","components/forms/addProject.js","components/forms/addUser.js","components/projects/projects.js","containers/projects/index.js","hoc/dropdown/dropdown.js","components/time/time.js","components/app/tasks/tasks.js","containers/app/index.js","hoc/auth/auth.js","index.js","middleware/redux/socketMiddleware.js","routes.js","components/projects/projects.module.css","components/forms/forms.module.css","hoc/popup/popup.module.css","components/time/time.module.css","hoc/dropdown/dropdown.module.css","containers/app/index.module.css","components/app/tasks/tasks.module.css"],"names":["module","exports","container","menu","menuWrapper","logo","menuList","menuItem","menuButton","firstScreen","textWrapper","title","subtitle","text","cta","rootReducer","combineReducers","user","state","arguments","length","undefined","action","type","Object","objectSpread","payload","projects","newState","Array","isArray","toConsumableArray","i","_id","project","concat","push","updateTask","_ref4","taskId","projectId","name","creator","timeSetted","finished","finishTime","axios","post","then","response","data","Login","email","password","success","errors","handleInputEmail","event","_this","setState","target","value","handleInputPassword","submitForm","preventDefault","validateForm","props","match","showErrors","map","item","react_default","a","createElement","key","className","css","error","onSubmit","this","popupForm","input","placeholder","onChange","required","submit","txt","href","onClick","showRegister","link","msg","Component","Popup","close","children","LoginContainer","e","dispatch","_ref2","loginUser","nextProps","isAuth","history","login_Login","connect","Register","confirmPassword","handleInputConfirmPassword","handleInputName","activated","activationText","showLogin","RegisterContainer","_ref","registerUser","console","log","register_Register","Home","openLogin","openRegister","toggleOpenLogin","toggleOpenRegister","Link","to","login","register","AddTask","taskName","task","handleTaskName","handleSubmit","submitAddTask","id","Date","now","onClose","addTaskForm","smallSubmit","cansel","AddProject","projectName","handleProjectName","updateProject","addProject","AddUser","userEmail","handleUserEmail","addUserToProject","addUserForm","Projects","showAddProject","updatedProject","openAddUser","workWithProject","prepereToUpdateProject","stopPropagation","elem","parentNode","dataset","projectid","tempProject","find","canselUpdatingProject","renderDropdown","dropdown","protected","dropdownItem","callback","react_fontawesome_lib_default","icon","dropdownText","toggleAddProject","showDropdown","nextSibling","body","document","querySelector","style","addEventListener","_closeDropdown","removeEventListener","parent","toggleAddUser","res","catch","err","renderProjects","data-projectid","setProject","ellipsis","deleteProject","r_angle","projectsTitle","plus","addProject_AddProject","addProjectText","addUser_AddUser","ProjectsContainer","_ref6","_ref7","_ref8","delete","projects_Projects","Dropdown","open","toggleDropdown","_this2","closeDropdown","assertThisInitialized","getElementById","contains","component","contentWrapper","Time","inputWrapper","htmlFor","label","time","handleTimeChange","isValidTime","warning","Tasks","tasks","hidden","taskFinished","data-taskid","finishedTrue","finishTask","taskText","taskIconsWrapper","deleteTask","dropdown_dropdown","toLocaleDateString","slice","inline","entry_nostyle_default","minDate","handleCalendarChange","date","timeSubmitWrapper","updateTaskTime","timeSubmit","disabled","prepareToUpdateTask","AppContainer","showAddTask","currentProject","updatedTask","showMobileMenu","splitedTime","split","hours","trim","minutes","parseInt","_this$state","newDate","getFullYear","getMonth","getDate","_time$split","_time$split2","slicedToArray","setMinutes","getMinutes","taskid","click","toggleMobileMenu","logOut","get","setCurrentProject","_ref3","addTask","isUpdateDate","canselUpdatingTask","_ref5","toggleAddTask","renderProject","project__title","assign","renderHeader","mobileMenuBtn","menuLogo","menuText","bg","app_holder","left_menu","projects_ProjectsContainer","content","addTask_AddTask","auth_auth","ComposedClass","reload","Auth","_Component","_getPrototypeOf2","classCallCheck","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","loading","inherits","createClass","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","url","socket","isProjectUpdated","storeAPI","next","io","emit","on","disconnect","_i","socketMiddleware","createStore","ReactDOM","render","es","store","reducers","BrowserRouter","Switch","Route","path","exact","popup","popup-header","popup-title","popup-close","popup-content"],"mappings":"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","file":"static/js/main.6d7bf1e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__1tDa_\",\"menu\":\"home_menu__1hbYA\",\"menuWrapper\":\"home_menuWrapper__3Gq0c\",\"logo\":\"home_logo__8IeU_\",\"menuList\":\"home_menuList__1D8Xc\",\"menuItem\":\"home_menuItem__2gWry\",\"menuButton\":\"home_menuButton__3_9BL\",\"firstScreen\":\"home_firstScreen__1aBm3\",\"textWrapper\":\"home_textWrapper__xpQr2\",\"title\":\"home_title__1o5PN\",\"subtitle\":\"home_subtitle__DlRH2\",\"text\":\"home_text__3uIHB\",\"cta\":\"home_cta__eMf8m\"};","import { combineReducers } from 'redux';\r\nimport user from './user_reducer';\r\nimport projects from './projects_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n    projects\r\n});\r\n\r\nexport default rootReducer;","export default function(state = {}, action) {\r\n    switch (action.type) {\r\n\r\n        case 'LOGIN_USER':\r\n            return {\r\n                ...action.payload\r\n            }\r\n\r\n        case 'LOGOUT_USER':\r\n            return { }\r\n\r\n        case 'REGISTER_USER':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case 'AUTH':\r\n            return {\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export default function(state = [], action) {\r\n    let newState;\r\n    switch (action.type) {\r\n\r\n        case 'GET_PROJECTS':\r\n            return Array.isArray(action.payload) ? [...action.payload] : state;\r\n        \r\n        case 'ADD_TASK':\r\n            newState = [...state];\r\n            for (let i = 0; i < newState.length; i++) {\r\n                if (newState[i]._id === action.payload.project._id) {\r\n                    newState[i] = action.payload.project;\r\n                }\r\n            }\r\n            return newState;\r\n        \r\n        case 'UPDATE_TASK': \r\n            newState = [...state];\r\n            for (let i = 0; i < newState.length; i++) {\r\n                if (newState[i]._id === action.payload.project._id) {\r\n                    newState[i] = action.payload.project;\r\n                    break;\r\n                }\r\n            }\r\n            return newState;\r\n\r\n        case 'DELETE_TASK': \r\n            newState = [...state];\r\n            for (let i = 0; i < newState.length; i++) {\r\n                if (newState[i]._id === action.payload.project._id) {\r\n                    newState[i] = action.payload.project;\r\n                    break;\r\n                }\r\n            }\r\n            return newState;\r\n\r\n        case 'ADD_PROJECT': \r\n            return [...state, action.payload.project]\r\n\r\n        case 'UPDATE_PROJECT': \r\n            newState = [...state];\r\n            for (let i = 0; i < newState.length; i++) {\r\n                if (newState[i]._id === action.payload.project._id) {\r\n                    newState[i] = action.payload.project;\r\n                    break;\r\n                }\r\n            }\r\n            return newState;\r\n            \r\n        case 'DELETE_PROJECT': \r\n            newState = [];\r\n            for (let i = 0; i < state.length; i++) {\r\n                if (action.payload.project && (state[i]._id !== action.payload.project._id)) {\r\n                    newState.push(state[i]);\r\n                }\r\n            }\r\n            return newState;\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios'\r\n\r\n\r\nexport function registerUser({email, password, name}) {\r\n    const request = axios.post('/api/register', {email, password, name})\r\n        .then(response => response.data);\r\n    return {\r\n        type: 'REGISTER_USER',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser({email, password}) {\r\n    const request = axios.post('/api/login', {email, password})\r\n        .then(response => response.data);\r\n    return {\r\n        type: 'LOGIN_USER',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logOut() {\r\n    const request = axios.get('/api/logout')\r\n        .then(response => response.data);\r\n    return {\r\n        type: 'LOGOUT_USER',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth() {\r\n    const request = axios.get('/api/auth')\r\n        .then(response => response.data);\r\n    return {\r\n        type: 'AUTH',\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\nexport function getProjects() {\r\n    const request = axios.get('/api/getProjects')\r\n        .then(response => response.data);\r\n    return {\r\n        type: 'GET_PROJECTS',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function addTask({name, creator, finishTime, projectId}) {\r\n    const request = axios.post('/api/addTask', {name, creator, finishTime, projectId})\r\n        .then(response => response.data);\r\n    return {\r\n        type: 'ADD_TASK',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function updateTask({taskId, projectId, name, creator, timeSetted, finished, finishTime}) {\r\n    const request = axios.post('/api/updateTask', {taskId, name, creator, finished, timeSetted, finishTime, projectId})\r\n        .then(response => response.data);\r\n    return {\r\n        type: 'UPDATE_TASK',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function deleteTask({taskId, projectId}) {\r\n    const request = axios.delete('/api/deleteTask', {data:{taskId, projectId}})\r\n        .then(response => response.data);\r\n    return {\r\n        type: 'DELETE_TASK',\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\nexport function addProject({name, creator}) {\r\n    const request = axios.post('/api/addProject', {name, creator})\r\n        .then(response => response.data);\r\n    return {\r\n        type: 'ADD_PROJECT',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function updateProject({projectId, name}) {\r\n    const request = axios.post('/api/updateProject', {projectId, name})\r\n        .then(response => response.data);\r\n    return {\r\n        type: 'UPDATE_PROJECT',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function deleteProject({projectId}) {\r\n    const request = axios.delete('/api/deleteProject', {data: {projectId}})\r\n        .then(response => response.data);\r\n    return {\r\n        type: 'DELETE_PROJECT',\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function connectToSocket(user) {\r\n    return {\r\n        type: 'CONNECT_TO_SOCKET',\r\n        payload: user\r\n    }\r\n}","import React, { Component} from 'react';\r\nimport css from './forms.module.css';\r\n\r\n// TODO: Rewrite validation(reorganize)\r\n// TODO: No user error\r\n\r\nexport default class Login extends Component {\r\n    state = {\r\n        email: 'test@gmail.com',\r\n        password: 'qweqweqwe',\r\n        success: false,\r\n        errors: ''\r\n    }\r\n\r\n    handleInputEmail = (event) => {\r\n        this.setState( {email: event.target.value} );\r\n    }\r\n    \r\n    handleInputPassword = (event) => {\r\n        this.setState( {password: event.target.value} );\r\n    }\r\n\r\n    submitForm = (event) =>{\r\n        event.preventDefault();\r\n        let errors = this.validateForm();\r\n        if (errors.length !== 0) {\r\n            this.setState({ errors });\r\n        } else {\r\n            this.setState({ errors: '' });\r\n            this.props.submitForm(event, this.state.email, this.state.password, this.state.name);\r\n        } \r\n    }\r\n\r\n    validateForm = () => {\r\n        let errors = [];\r\n        \r\n        //check email\r\n        let email = this.state.email.match(/[a-z]+([a-z0-9-_.])*@[a-z]+\\.[a-z]+/gi);\r\n        if (!email && this.state.email) {\r\n            errors.push('Введите реальный email адрес');\r\n        } else if (email && email[0] !== this.state.email) {\r\n            errors.push('Введите реальный email адрес');\r\n        }\r\n\r\n        // check password\r\n        let password = this.state.password.match(/[a-z0-9-_]+/gi);\r\n        if (password && password[0] !== this.state.password) {\r\n            errors.push('Недопустимые символы в пароле');\r\n        } else if (password[0].length < 6) {\r\n            errors.push('Минимальная длина пароля 6 символов');\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    showErrors = (errors) => (\r\n        errors.map( (item, i) => <p key={i} className={css.error}>{item}</p> ) \r\n    )\r\n\r\n    render(){\r\n        return (\r\n            <form onSubmit={this.submitForm} className={css.popupForm}>\r\n                <input\r\n                    className={css.input}\r\n                    type=\"email\"\r\n                    placeholder=\"Введите вашу почту\"\r\n                    value={this.state.email}\r\n                    onChange={this.handleInputEmail}\r\n                    required=\"required\"\r\n                />\r\n                <input\r\n                    className={css.input}\r\n                    type=\"password\"\r\n                    placeholder=\"Введите ваш пароль\"\r\n                    value={this.state.password}\r\n                    onChange={this.handleInputPassword}\r\n                    required=\"required\"\r\n                />\r\n                <button type=\"submit\" className={css.submit}>Вход</button>\r\n\r\n                <p className={css.txt}>\r\n                    Нет аккаунта?\r\n                    <a \r\n                        href='/register' \r\n                        onClick={this.props.showRegister}\r\n                        className={css.link}\r\n                        > Создайте его за пару секунд\r\n                    </a>\r\n                </p>\r\n\r\n                {this.props.user && this.props.user.msg \r\n                    ? <p className={css.error}>{this.props.user.msg}</p>\r\n                    : null\r\n                }\r\n\r\n                {this.state.errors\r\n                    ? this.showErrors(this.state.errors)\r\n                    : null}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport css from './popup.module.css';\r\n\r\nexport default function Popup(props) {\r\n    return (\r\n        <div className={css['popup']}>\r\n            <div className={css['popup-content']}>\r\n                <table className={css['popup-header']}>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td className={css['popup-title']}>\r\n                                {props.title}\r\n                            </td>\r\n                            <td>\r\n                                <div \r\n                                    className={css['popup-close']}\r\n                                    onClick={props.close}>\r\n                                    X\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loginUser } from '../../actions';\r\nimport Login from '../../components/forms/login';\r\nimport Popup from '../../hoc/popup/popup';\r\n\r\nclass LoginContainer extends Component {\r\n    \r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.user.isAuth){\r\n            this.props.history.push('/app');\r\n        }\r\n    }\r\n\r\n    submitForm = (e, email, password) => {\r\n        e.preventDefault();\r\n        this.props.dispatch(loginUser({email, password}));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Popup close={this.props.close} title={'Вход'}>\r\n                <Login\r\n                    showRegister={this.props.showRegister}\r\n                    submitForm={this.submitForm}\r\n                    user={this.props.user}\r\n                />\r\n            </Popup>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoginContainer);\r\n\r\n","import React, { Component} from 'react';\r\nimport css from './forms.module.css';\r\n\r\n// TODO: Rewrite validation\r\n\r\nexport default class Register extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        name: '',\r\n        success: false,\r\n        errors: ''\r\n    }\r\n\r\n    handleInputEmail = (event) => {\r\n        this.setState( {email: event.target.value} );\r\n    }\r\n    \r\n    handleInputPassword = (event) => {\r\n        this.setState( {password: event.target.value} );\r\n    }\r\n\r\n    handleInputConfirmPassword = (event) => {\r\n        this.setState( {confirmPassword: event.target.value} );\r\n    }\r\n\r\n    handleInputName = (event) => {\r\n        this.setState( {name: event.target.value} );\r\n    }\r\n\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n        let errors = this.validateForm();\r\n        if (errors.length !== 0) {\r\n            this.setState({ errors });\r\n        } else {\r\n            this.setState({ errors: '' });\r\n            this.props.submitForm(event, this.state.email, this.state.password, this.state.name);\r\n        }   \r\n    }\r\n\r\n    validateForm = () => {\r\n        let errors = [];\r\n        \r\n        //check email\r\n        let email = this.state.email.match(/[a-z]+([a-z0-9-_.])*@[a-z]+\\.[a-z]+/gi);\r\n        if (!email && this.state.email) {\r\n            errors.push('Введите реальный email адрес');\r\n        } else if (email && email[0] !== this.state.email) {\r\n            errors.push('Введите реальный email адрес');\r\n        }\r\n\r\n        // check password\r\n        let password = this.state.password.match(/[a-z0-9-_]+/gi);\r\n        if (password && password[0] !== this.state.password) {\r\n            errors.push('Недопустимые символы в пароле');\r\n        } else if (password[0].length <= 6) {\r\n            errors.push('Минимальная длина пароля 6 символов');\r\n        } else if (password[0] !== this.state.confirmPassword) {\r\n            errors.push('Пароли не совпадают');\r\n        }\r\n\r\n        //check name \r\n        let name = this.state.name.match(/[a-z0-9]+/gi);\r\n        if (name && name[0] !== this.state.name) {\r\n            errors.push('Недопустимые символы в имени');\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    showErrors = (errors) => (\r\n        errors.map( (item, i) => <p key={i} className={css.error}>{item}</p> ) \r\n    )\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {this.props.user.activated === false\r\n                    ? <p className={css.activationText}>{this.props.user.msg}</p>\r\n                     \r\n                    :<form onSubmit={this.submitForm} className={css.popupForm}>\r\n                        <input\r\n                            className={css.input}\r\n                            type=\"email\"\r\n                            placeholder=\"Введите вашу почту\"\r\n                            value={this.state.email}\r\n                            onChange={this.handleInputEmail}\r\n                            required=\"required\"\r\n                        />\r\n                        <input\r\n                            className={css.input}\r\n                            type=\"text\"\r\n                            placeholder=\"Введите ваше имя\"\r\n                            value={this.state.name}\r\n                            onChange={this.handleInputName}\r\n                            required=\"required\"\r\n                        />\r\n                        <input\r\n                            className={css.input}\r\n                            type=\"password\"\r\n                            placeholder=\"Введите ваш пароль\"\r\n                            value={this.state.password}\r\n                            onChange={this.handleInputPassword}\r\n                            required=\"required\"\r\n                        />\r\n                        <input\r\n                            className={css.input}\r\n                            type=\"password\"\r\n                            placeholder=\"Повторите пароль\"\r\n                            value={this.state.confirmPassword}\r\n                            onChange={this.handleInputConfirmPassword}\r\n                            required=\"required\"\r\n                        />\r\n                        <button type=\"submit\" className={css.submit}>Зарегистрироваться</button>\r\n\r\n                        <p className={css.txt}>\r\n                            Уже зарегистрированы?\r\n                            <a \r\n                                href='/login' \r\n                                onClick={this.props.showLogin}\r\n                                className={css.link}\r\n                                > Вход\r\n                            </a>\r\n                        </p>\r\n\r\n                        {this.props.user && this.props.user.msg \r\n                            ? <p className={css.error}>{this.props.user.msg}</p>\r\n                            : null\r\n                        }\r\n\r\n                        {this.state.errors\r\n                            ? this.showErrors(this.state.errors)\r\n                            : null}\r\n\r\n                    </form>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { registerUser } from '../../actions';\r\nimport Register from '../../components/forms/register';\r\nimport Popup from '../../hoc/popup/popup';\r\n\r\nclass RegisterContainer extends Component {\r\n    \r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps);\r\n    }\r\n\r\n    submitForm = (e, email, password, name) => {\r\n        e.preventDefault();\r\n        this.props.dispatch(registerUser({email, password, name}));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Popup close={this.props.close} title={'Создайте его за пару секунд!'}>\r\n                <Register\r\n                    showLogin={this.props.showLogin}\r\n                    submitForm={this.submitForm}\r\n                    user={this.props.user}\r\n                />\r\n            </Popup>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RegisterContainer);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoginContainer from '../../containers/login';\r\nimport RegisterContainer from '../../containers/register';\r\nimport css from './home.module.css';\r\n\r\nexport default class Home extends Component {\r\n    state = {\r\n        openLogin: false,\r\n        openRegister: false\r\n    }\r\n\r\n    toggleOpenLogin = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ openLogin: !this.state.openLogin })\r\n    }\r\n    \r\n    toggleOpenRegister = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ openRegister: !this.state.openRegister })\r\n    }\r\n\r\n    showRegister = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ \r\n            openLogin: false,\r\n            openRegister: true\r\n        })\r\n    }\r\n\r\n    showLogin = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ \r\n            openLogin: true,\r\n            openRegister: false\r\n        })\r\n    }\r\n\r\n    menu = (\r\n        <div className={css.menuWrapper}>\r\n            <div className={css.container}>\r\n                <nav className={css.menu}>\r\n                    <Link to='/' className={css.logo}>SmartPlanner</Link>\r\n                    <ul className={css.menuList}>\r\n                        <li className={css.menuItem}>\r\n                            <a href='/login' onClick={this.toggleOpenLogin} className={css.menuButton}>Вход</a>\r\n                        </li>\r\n                        <li className={css.menuItem}>\r\n                            <a href='/register' onClick={this.toggleOpenRegister} className={css.menuButton}>Регистрация</a>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </div>  \r\n    )\r\n\r\n    firstScreen = (\r\n        <section className={css.firstScreen}>\r\n            <div className={css.container}>\r\n                <div className={css.textWrapper}>\r\n                    <h1 className={css.title}>\r\n                        Организуй задачи\r\n                    </h1>\r\n                    <p className={css.subtitle}>\r\n                        И наслаждайся отдыхом\r\n                    </p>\r\n                    <p className={css.text}>\r\n                        Мы поможем отслеживать Ваши задачи. А вместе с этим экономить время и не держать все в голове. \r\n                    </p>\r\n                    <a href=\"/register\" className={css.cta} onClick={this.toggleOpenRegister}>\r\n                        Начните сейчас\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.menu}\r\n                {this.firstScreen}\r\n                {this.state.openLogin\r\n                    ? <LoginContainer close={this.toggleOpenLogin} showRegister={this.showRegister} history={this.props.history}/>\r\n                    : null}\r\n                {this.state.openRegister\r\n                    ? <RegisterContainer close={this.toggleOpenRegister} showLogin={this.showLogin}/>\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport css from './forms.module.css';\r\n\r\nexport default class AddTask extends Component {\r\n    state = {\r\n        taskName: this.props.task ? this.props.task.name : ''\r\n    }\r\n\r\n    handleTaskName = (e) => {\r\n        this.setState({taskName: e.target.value});\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.task \r\n            ? this.props.updateTask(e, this.state.taskName)\r\n            : this.props.submitAddTask(e, this.state.taskName, this.props.user.id, Date.now() + 20000);\r\n        this.props.onClose();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={css.addTaskForm} onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" \r\n                    className={css.input}\r\n                    value={this.state.taskName}\r\n                    required \r\n                    onChange={this.handleTaskName} \r\n                    placeholder=\"Текст задачи\"\r\n                />\r\n                <input type=\"submit\" className={`${css.smallSubmit} ${css.submit}`} value={this.props.task ? 'Обновить задачу' : \"Добавить задачу\"}/>\r\n                <div className={css.cansel} onClick={this.props.onClose}>\r\n                    Отмена\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport css from './forms.module.css';\r\n\r\nexport default class AddProject extends Component {\r\n    state = {\r\n        projectName: this.props.project ? this.props.project.name : ''\r\n    }\r\n\r\n    handleProjectName = (e) => {\r\n        this.setState({projectName: e.target.value});\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.project \r\n            ? this.props.updateProject(this.props.project._id, this.state.projectName)\r\n            : this.props.addProject(this.state.projectName);\r\n        this.props.onClose();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className={css.addTaskForm} onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" \r\n                    className={css.input}\r\n                    value={this.state.projectName}\r\n                    required \r\n                    onChange={this.handleProjectName} \r\n                    placeholder=\"Текст задачи\"\r\n                />\r\n                <input type=\"submit\" className={`${css.smallSubmit} ${css.submit}`} value={this.props.project ? 'Обновить проект' : \"Добавить проект\"}/>\r\n                <div className={css.cansel} onClick={this.props.onClose}>\r\n                    Отмена\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Popup from '../../hoc/popup/popup';\r\nimport css from './forms.module.css';\r\n\r\nexport default class AddUser extends Component {\r\n    state = {\r\n        userEmail: ''\r\n    }\r\n\r\n    handleUserEmail = (e) => {\r\n        this.setState({userEmail: e.target.value});\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addUserToProject(e, this.state.userEmail);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Popup close={this.props.onClose} title={'Добавить пользователя'}>\r\n                <form className={css.addUserForm} onSubmit={this.handleSubmit}>\r\n                    <input \r\n                        type=\"email\" \r\n                        className={css.input}\r\n                        value={this.state.userEmail}\r\n                        required \r\n                        onChange={this.handleUserEmail} \r\n                        placeholder=\"Email пользователя\"\r\n                    />\r\n                    <input type=\"submit\" className={css.submit} value=\"Добавить\"/>\r\n                </form>\r\n            </Popup>\r\n        )\r\n    }\r\n}\r\n","import React, { Component} from 'react';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport css from './projects.module.css';\r\nimport AddProject from '../../components/forms/addProject'\r\nimport AddUser from '../forms/addUser';\r\nimport axios from 'axios';\r\n\r\nexport default class Projects extends Component {\r\n    state = {\r\n        showAddProject: false,\r\n        updatedProject: null,\r\n        openAddUser: false,\r\n        workWithProject: ''\r\n    }\r\n\r\n    prepereToUpdateProject = (e) => {\r\n        e.stopPropagation();\r\n        let projectId = '';\r\n        let elem = e.target.parentNode;\r\n        while (!projectId) {\r\n            if (elem.dataset.projectid) {\r\n                projectId = elem.dataset.projectid;\r\n                break;\r\n            }\r\n            elem = elem.parentNode;\r\n        }\r\n        const tempProject = this.props.projects.find(project => project._id === projectId);\r\n        this.setState({\r\n            updatedProject: tempProject\r\n        })\r\n    }\r\n\r\n    canselUpdatingProject = () => {\r\n        this.setState({\r\n            updatedProject: ''\r\n        })\r\n    }\r\n    \r\n    renderDropdown = (dropdown) => {\r\n        return dropdown.map( (item, i) => (\r\n            (item.protected && (item.creator === this.props.user._id) ) || !item.protected\r\n                ?   <li key={i} className={css.dropdownItem} onClick={item.callback}>\r\n                        <FontAwesome name={item.icon}/>\r\n                        <span className={css.dropdownText}>{item.text}</span>\r\n                    </li>\r\n                : null\r\n        ))\r\n    }\r\n\r\n    toggleAddProject = () => {\r\n        this.setState({\r\n            showAddProject: !this.state.showAddProject\r\n        })\r\n    }\r\n\r\n    showDropdown = (e) => {\r\n        e.stopPropagation();\r\n        let dropdown = e.target.nextSibling;\r\n        let body = document.querySelector('body');\r\n        dropdown.style = 'display: block;';\r\n\r\n        body.addEventListener('click', function _closeDropdown(event) {\r\n            dropdown.style = '';\r\n            body.removeEventListener('click', _closeDropdown);\r\n        });\r\n    }\r\n\r\n    openAddUser = (e) => {\r\n        let parent = e.target.parentNode;\r\n        while (!parent.dataset.projectid){\r\n            parent = parent.parentNode;\r\n        }\r\n        const projectId = parent.dataset.projectid;\r\n        this.setState({\r\n            openAddUser: !this.state.openAddUser,\r\n            workWithProject: projectId\r\n        });\r\n    }\r\n\r\n    toggleAddUser = (e) => {\r\n        this.setState({openAddUser: !this.state.openAddUser});\r\n    }\r\n\r\n    addUserToProject = (e, userEmail) => {\r\n        const projectId = this.state.workWithProject;\r\n        axios.post('/api/sendInviteLink', {projectId, userEmail})\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err));\r\n            this.setState({\r\n                openAddUser: false,\r\n                workWithProject: ''\r\n            });\r\n    }\r\n\r\n    renderProjects = (projects) => {\r\n        let updatedProject = this.state.updatedProject;\r\n        return projects.length !== 0\r\n            ? projects.map( (project , i) => (\r\n                !updatedProject || (updatedProject._id !== project._id)\r\n                    ? <li key={i} className={css.project} data-projectid={project._id} onClick={this.props.setProject}>\r\n                        {project.name}\r\n                        <FontAwesome name='ellipsis-h' className={css.ellipsis} onClick={this.showDropdown}/>\r\n                        <ul className={css.dropdown}>\r\n                            {this.renderDropdown(this.dropdown, project)}\r\n                        </ul>\r\n                      </li>\r\n                    : null ))\r\n            : null\r\n        }\r\n\r\n    dropdown = [\r\n            {\r\n                icon: 'user-plus',\r\n                text: 'Добавить пользователя',\r\n                protected: false,\r\n                callback: this.openAddUser\r\n            },\r\n            {\r\n                icon: 'edit',\r\n                text: 'Редактировать проект',\r\n                protected: false,\r\n                callback: this.prepereToUpdateProject\r\n            },\r\n            {\r\n                icon: 'trash',\r\n                text: 'Удалить проект',\r\n                protected: true,\r\n                callback: this.props.deleteProject\r\n            }\r\n        ]\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={css.projects}>\r\n                    <FontAwesome name='angle-right' className={css.r_angle}/>\r\n                    <span className={css.projectsTitle}>Проекты:</span>\r\n                    <span className={css.plus} onClick={this.toggleAddProject}>+</span>\r\n                </div>\r\n                <ul>\r\n                    {this.renderProjects(this.props.projects)}\r\n                </ul>\r\n                {this.state.updatedProject\r\n                        ? <AddProject\r\n                            updateProject={this.props.updateProject}\r\n                            user={this.props.user}\r\n                            project={this.state.updatedProject}\r\n                            onClose={this.canselUpdatingProject}\r\n                        />\r\n                        : null}\r\n                {this.state.showAddProject\r\n                        ? <AddProject\r\n                            onClose={this.toggleAddProject}\r\n                            addProject={this.props.addProject}\r\n                            user={this.props.user}\r\n                        />\r\n                        : null}\r\n                <div className={css.addProject} onClick={this.toggleAddProject}>\r\n                    <span className={css.plus}>+</span>\r\n                    <span className={css.addProjectText}>Добавить проект</span>\r\n                </div>\r\n                {this.state.openAddUser\r\n                    ? <AddUser\r\n                        onClose={this.toggleAddUser}\r\n                        addUserToProject={this.addUserToProject}\r\n                    />\r\n                    : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Projects from '../../components/projects/projects';\r\nimport {addProject, updateProject, deleteProject} from '../../actions';\r\n\r\nexport default class ProjectsContainer extends Component {\r\n    \r\n    addProject = (name) => {\r\n        let creator = this.props.user.id;\r\n        this.props.dispatch(addProject({name, creator}));\r\n    }\r\n\r\n    updateProject = (projectId, name) => {\r\n        this.props.dispatch(updateProject({projectId, name}));\r\n    }\r\n\r\n    deleteProject = (e) => {\r\n        e.stopPropagation();\r\n        let projectId = '';\r\n        let elem = e.target.parentNode;\r\n        while (!projectId) {\r\n            if (elem.dataset.projectid) {\r\n                projectId = elem.dataset.projectid;\r\n                break;\r\n            }\r\n            elem = elem.parentNode;\r\n        }\r\n        this.props.dispatch(deleteProject({projectId}));\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Projects projects={this.props.projects}\r\n                user={this.props.user}\r\n                addProject={this.addProject} \r\n                updateProject={this.updateProject}\r\n                deleteProject={this.deleteProject}\r\n                setProject={this.props.setProject}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport css from './dropdown.module.css';\r\n\r\nclass Dropdown extends Component {\r\n    state = {\r\n        open: false\r\n    }\r\n    componentWillUnmount () {\r\n        const body = document.querySelector('body');\r\n        body.removeEventListener('click', this._closeDropdown);\r\n    }\r\n\r\n    toggleDropdown = e => this.setState({open: !this.state.open})\r\n\r\n    closeDropdown = e => {\r\n        const body = document.querySelector('body');\r\n        body.addEventListener('click', this._closeDropdown);\r\n    }\r\n\r\n    _closeDropdown = (e) =>{\r\n        const body = document.querySelector('body');\r\n        const _this = this;\r\n        const thisDropdown = document.getElementById(this.props.name);\r\n        if (!thisDropdown.contains(e.target)) {\r\n            _this.setState({open: false});\r\n            body.removeEventListener('click', this._closeDropdown);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.closeDropdown} className={`${css.dropdown} ${this.props.className}`} id={this.props.name}>\r\n                <div className={`${css.toggleDropdown}`} onClick={this.toggleDropdown}>\r\n                    {this.props.component}\r\n                </div>\r\n                {this.state.open\r\n                    ?<div className={css.contentWrapper}>\r\n                        {this.props.children}\r\n                    </div>\r\n                    : null\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dropdown;","import React from 'react';\r\nimport css from './time.module.css';\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nexport default function Time(props) {\r\n    return (\r\n        <div className={css.inputWrapper}>\r\n            <label htmlFor='time-input' className={css.label}>Время: </label>\r\n            <input\r\n                id='time-input'\r\n                value={props.time} \r\n                placeholder=\"Напр. 9:23\"\r\n                onChange={props.handleTimeChange}\r\n                className={css.input}\r\n            />\r\n            {props.isValidTime\r\n                ? null\r\n                : <FontAwesome\r\n                    className={css.warning}\r\n                    name='warning'\r\n                />\r\n                }\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport css from './tasks.module.css';\r\nimport Dropdown from '../../../hoc/dropdown/dropdown';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport Time from '../../time/time';\r\nimport Calendar from 'react-calendar/dist/entry.nostyle';\r\n\r\nexport default function Tasks(props) {\r\n\r\n    return (\r\n        props.tasks.map((task, i) => (\r\n            !task.hidden\r\n                ?   <div key={i} className={`${css.task} ${task.finished ? css.taskFinished : ''}`} data-taskid={task._id}>\r\n                        <FontAwesome name='check-circle'\r\n                        className={`${css.finished} ${task.finished ? css.finishedTrue : ''}`} \r\n                        onClick={props.finishTask}/>\r\n                        <span className={css.taskText}>{task.name}</span>\r\n                        <div className={css.taskIconsWrapper}>\r\n                            <FontAwesome name='trash' className={css.icon} onClick={props.deleteTask} />                           \r\n                            <Dropdown\r\n                                name={`task-calendar${i}`}\r\n                                component={task.timeSetted\r\n                                    ?   <span className={css.timeSetted}>         \r\n                                            {new Date(task.finishTime).toLocaleDateString().slice(0, -5)}\r\n                                        </span> \r\n                                    :   <FontAwesome name='calendar-o' className={css.icon}/>}\r\n                                className={css.inline}>\r\n                                <Calendar\r\n                                    minDate={new Date()}\r\n                                    onChange={props.handleCalendarChange}\r\n                                    value={props.date}\r\n                                />\r\n                                <Time\r\n                                    time={props.time}\r\n                                    handleTimeChange={props.handleTimeChange}\r\n                                    isValidTime={props.isValidTime} \r\n                                />\r\n                                <div className={css.timeSubmitWrapper}>\r\n                                    <button \r\n                                        onClick={props.updateTaskTime}\r\n                                        className={`${css.timeSubmit} ${props.isValidTime ? null : css.disabled}`}\r\n                                        disabled={props.isValidTime ? false : true}>\r\n                                            Задать\r\n                                        </button>\r\n                                </div>       \r\n                            </Dropdown>\r\n                            <Dropdown\r\n                                name={`taskActions${i}`}\r\n                                component={<FontAwesome name='ellipsis-h' className={css.icon}/>}\r\n                                className={css.inline}\r\n                                >\r\n                                <div className={css.dropdownItem} onClick={props.prepareToUpdateTask}>\r\n                                    <FontAwesome name='edit' className={css.icon}/>\r\n                                    <span className={css.dropdownText}>Редактировать</span>\r\n                                </div>\r\n                            </Dropdown>\r\n                        </div>\r\n                    </div>\r\n                : null\r\n        ))    \r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getProjects, addTask, updateTask , deleteTask, logOut, connectToSocket} from '../../actions';\r\nimport css from './index.module.css';\r\nimport AddTask from '../../components/forms/addTask';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport ProjectsContainer from '../projects';\r\nimport Tasks from '../../components/app/tasks/tasks';\r\n\r\nclass AppContainer extends Component {\r\n\r\n    state = {\r\n        showAddTask: false,\r\n        currentProject: '',\r\n        updatedTask: null,\r\n        showMobileMenu: false,\r\n        date: new Date(),\r\n        time: '',\r\n        isValidTime: true\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (this.props.user.isAuth) {\r\n            console.log('connect');\r\n            this.props.dispatch(connectToSocket(this.props.user));\r\n        }\r\n        this.props.dispatch(getProjects());\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        let currentProject = this.state.currentProject;\r\n        if (currentProject) {\r\n            this.setState({\r\n                currentProject: nextProps.projects.find(project => project._id === currentProject._id)\r\n            })\r\n        } else {\r\n            this.setState({\r\n                currentProject: nextProps.projects[0] ?  nextProps.projects[0] : ''\r\n            })\r\n        }\r\n    }\r\n\r\n    handleCalendarChange = (date) => this.setState({ date })\r\n\r\n    handleTimeChange = (e) => {\r\n        const time = e.target.value;\r\n        const isValidTime = this.isValidTime(time);\r\n        this.setState({time, isValidTime});\r\n    }\r\n\r\n    isValidTime = (time) => {\r\n        if (!time) return true;\r\n\r\n        const re = /[^0-9: ]/;\r\n        if (time.match(re)) return false;\r\n\r\n        const splitedTime = time.split(':');\r\n        if (splitedTime.length !== 2 || !splitedTime[1]) return false;\r\n\r\n        const hours = splitedTime[0].trim();\r\n        const minutes = splitedTime[1].trim();\r\n        \r\n        if (parseInt(hours) > 24 || parseInt(minutes) > 59) return false;\r\n        \r\n        return true;\r\n    }\r\n\r\n    updateTaskTime = (e) => {\r\n        let {date, time}  = this.state;\r\n        let newDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());\r\n        let [hours, minutes] = time.split(':');\r\n        if (time) {\r\n            hours = parseInt(hours);\r\n            minutes = parseInt(minutes);\r\n            newDate.setMinutes(newDate.getMinutes() + hours * 60 + minutes);\r\n        } else {\r\n            newDate.setMinutes(newDate.getMinutes() + 720);\r\n        }\r\n\r\n        let parent = e.target.parentNode;\r\n        while (!parent.dataset.taskid){\r\n            parent = parent.parentNode;\r\n        }\r\n        const taskId = parent.dataset.taskid;\r\n        const currentProject = this.state.currentProject;\r\n        const task = currentProject.tasks.find(task => task._id === taskId);\r\n        this.updateTask(e, null, task, newDate);\r\n        document.querySelector('body').click(); // Close dropdown\r\n    }\r\n\r\n    toggleMobileMenu = () => {\r\n        this.setState({showMobileMenu: !this.state.showMobileMenu});\r\n    }\r\n\r\n    logOut = () => {\r\n        this.props.dispatch(logOut());\r\n    }\r\n\r\n    setCurrentProject = (e) => {\r\n        let projectId = e.target.dataset.projectid;\r\n        this.setState({\r\n            currentProject: this.props.projects.find(project => project._id === projectId)\r\n        })\r\n    }\r\n\r\n    submitAddTask = (e, name, creator, finishTime) => {\r\n        this.props.dispatch(addTask({\r\n            projectId: this.state.currentProject._id,\r\n            name,\r\n            creator,\r\n            finishTime\r\n        }));\r\n    }\r\n\r\n    finishTask = (e) => {\r\n        let taskId = e.target.parentNode.dataset.taskid;\r\n        let task = this.state.currentProject.tasks.find(task => task._id === taskId);\r\n        this.props.dispatch(updateTask({\r\n            projectId: this.state.currentProject._id,\r\n            taskId: task._id,\r\n            creator: task.creator,\r\n            finishTime: task.finishTime,\r\n            name: task.name, \r\n            finished: !task.finished\r\n        }));\r\n    }\r\n\r\n    prepareToUpdateTask = (e) => {\r\n        let parent = e.target.parentNode;\r\n        while (!parent.dataset.taskid){\r\n            parent = parent.parentNode;\r\n        }\r\n        const taskId = parent.dataset.taskid;\r\n        const currentProject = this.state.currentProject;\r\n        const task = currentProject.tasks.find(task => task._id === taskId);\r\n        const tempProject = currentProject;\r\n        tempProject.tasks = currentProject.tasks.map(task => {\r\n            if (task._id === taskId) {\r\n                task.hidden = true\r\n            }\r\n            return task\r\n        });\r\n        this.setState({\r\n            currentProject: tempProject,\r\n            updatedTask: task\r\n        })\r\n    }\r\n\r\n    updateTask = (e, name, task, finishTime) => {\r\n        const isUpdateDate = name ? false : true;\r\n        let timeSetted = false;\r\n\r\n        if (isUpdateDate) {\r\n            name = task.name\r\n            timeSetted = true;\r\n        } else {\r\n            task = this.state.updatedTask;\r\n            finishTime = task.finishTime;\r\n            timeSetted = task.timeSetted;\r\n        } \r\n\r\n        this.props.dispatch(updateTask({\r\n            projectId: this.state.currentProject._id,\r\n            taskId: task._id,\r\n            creator: task.creator,\r\n            timeSetted: timeSetted,\r\n            finishTime: finishTime,\r\n            name: name, \r\n            finished: task.finished\r\n        }));\r\n\r\n        if (!isUpdateDate) this.setState({ updatedTask: null})\r\n    }\r\n\r\n    canselUpdatingTask = () => {\r\n        let project = this.props.projects.find(project => project._id === this.state.currentProject._id);\r\n        project.tasks = project.tasks.map(task => {\r\n            task.hidden = false;\r\n            return task;\r\n        });\r\n        this.setState({\r\n            currentProject: project,\r\n            updatedTask: null\r\n        })\r\n    }\r\n\r\n    deleteTask = (e) => {\r\n        let parent = e.target.parentNode;\r\n        while (!parent.dataset.taskid){\r\n            parent = parent.parentNode;\r\n        }\r\n        let taskId = parent.dataset.taskid;\r\n        let projectId = this.state.currentProject._id;\r\n        this.props.dispatch(deleteTask({taskId, projectId}));\r\n    }\r\n\r\n    toggleAddTask = () => {\r\n        this.setState({showAddTask: !this.state.showAddTask});\r\n    }\r\n\r\n    renderProject = (project) => (\r\n        <div className={css.project}>\r\n            <div className={css.project__title}>\r\n                {project.name}\r\n            </div>\r\n            <Tasks\r\n                tasks={project.tasks}\r\n                {...this.state}\r\n                finishTask={this.finishTask}\r\n                handleCalendarChange={this.handleCalendarChange}\r\n                handleTimeChange={this.handleTimeChange}\r\n                updateTaskTime={this.updateTaskTime}\r\n                prepareToUpdateTask={this.prepareToUpdateTask}\r\n                deleteTask={this.deleteTask}\r\n            />\r\n        </div>\r\n    )\r\n\r\n    renderHeader =  () => (\r\n        <div className={css.menuWrapper}>\r\n            <div className={css.container}>\r\n                <div className={css.menu}>\r\n                   <FontAwesome \r\n                        name={this.state.showMobileMenu ? 'close' : 'bars'}\r\n                        className={css.mobileMenuBtn}\r\n                        onClick={this.toggleMobileMenu}\r\n                    />\r\n                    <Link to='/' className={css.menuLogo}>SmartPlanner</Link>\r\n                    <ul className={css.menuList}>\r\n                        <li className={css.menuItem} onClick={this.logOut}>\r\n                            <FontAwesome name='sign-out'/>\r\n                            <span className={css.menuText}>Выход</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>  \r\n    )\r\n\r\n    render() {\r\n        return (\r\n            <div className={css.bg}>\r\n                {this.renderHeader()}\r\n                <div id=\"app_holder\" className={`${css.app_holder} ${css.container}`}>\r\n                    <div className={`${css.left_menu} ${this.state.showMobileMenu ? css.open : null}`}>\r\n                        <ProjectsContainer \r\n                            projects={this.props.projects} \r\n                            dispatch={this.props.dispatch} \r\n                            user={this.props.user}\r\n                            setProject={this.setCurrentProject}\r\n                        />\r\n                    </div>\r\n                    <div className={css.content}>\r\n                        {this.state.currentProject\r\n                                ? this.renderProject(this.state.currentProject)\r\n                                : null\r\n                            }\r\n                        {this.state.updatedTask\r\n                            ? <AddTask\r\n                                updateTask={this.updateTask}\r\n                                user={this.props.user}\r\n                                task={this.state.updatedTask}\r\n                                onClose={this.canselUpdatingTask}\r\n                            />\r\n                            : null}\r\n                        {this.state.showAddTask\r\n                            ? <AddTask\r\n                                onClose={this.toggleAddTask}\r\n                                submitAddTask={this.submitAddTask}\r\n                                user={this.props.user}\r\n                            />\r\n                            : null}\r\n                        {this.state.currentProject\r\n                            ? <div className={css.addTask} onClick={this.toggleAddTask}>\r\n                                <span className={css.plus}>+</span>Добавить задачу\r\n                            </div>\r\n                            : null \r\n                        }\r\n                    </div>                       \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        projects: state.projects\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AppContainer);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { auth } from '../../actions';\r\n\r\nexport default function(ComposedClass, reload) {\r\n    class Auth extends Component {\r\n\r\n        state = {\r\n            loading: true\r\n        }\r\n\r\n        componentWillMount() {\r\n            this.props.dispatch(auth());\r\n        }\r\n\r\n        componentWillReceiveProps(nextProps) {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n\r\n            if (!nextProps.user.isAuth) {\r\n                if (reload) {\r\n                    this.props.history.push('/');\r\n                }\r\n            \r\n            } else {\r\n                    if (reload === false) {\r\n                    this.props.history.push('/app');\r\n                    }\r\n                }\r\n            }\r\n\r\n            render(){\r\n                if(this.state.loading){\r\n                    return <div className=\"loader\">Loading...</div>\r\n                }\r\n            return(\r\n                <ComposedClass {...this.props} user={this.props.user}/>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    function mapStateToProps(state) {\r\n        return {\r\n            user: state.user\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(Auth);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport socketMiddleware from './middleware/redux/socketMiddleware';\r\nimport reducers from './reducers';\r\nimport Routes from './routes';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk, socketMiddleware('https://smart-planner.herokuapp.com'))(createStore);\r\n\r\nReactDOM.render((\r\n    <Provider store={createStoreWithMiddleware(reducers)} >\r\n        <BrowserRouter>\r\n            <Routes/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n), document.getElementById('root'));\r\n\r\n","import io from 'socket.io-client';\r\n\r\nexport default function socketMiddleware(url) {\r\n    let socket;\r\n    const isProjectUpdated = ['ADD_TASK', 'UPDATE_TASK', 'DELETE_TASK', 'UPDATE_PROJECT', 'DELETE_PROJECT'];\r\n\r\n    return storeAPI => next => action => {\r\n        switch(action.type) {\r\n            case \"CONNECT_TO_SOCKET\": {\r\n                    initSocket();\r\n                break;\r\n            }\r\n            case \"LOGOUT_USER\": {\r\n                if (socket) socket.disconnect();\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        // Check if project was updated\r\n        for (let actionType of isProjectUpdated) {\r\n            if (actionType === action.type && action.payload.success) {\r\n                socket.emit('projectUpdated', {\r\n                    type: action.type,\r\n                    project: action.payload.project\r\n                });\r\n            }\r\n        } \r\n\r\n        return next(action);\r\n\r\n    \r\n        function initSocket() {\r\n            socket = io.connect(url);\r\n            socket.emit('register', action.payload);\r\n\r\n            socket.on('projectUpdated', data => {\r\n                next({\r\n                    type: data.type, \r\n                    payload: {\r\n                        project: data.project\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Switch , Route } from 'react-router-dom';\r\n\r\nimport Home from './components/home/home';\r\nimport AppContainer from './containers/app';\r\nimport Auth from './hoc/auth/auth';\r\n\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <Switch>\r\n            <Route path='/app' component={Auth(AppContainer, true)}></Route>\r\n            <Route path='/' exact component={Home}></Route>\r\n        </Switch>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"r_angle\":\"projects_r_angle__rf2DA\",\"projects\":\"projects_projects__LONI_\",\"projectsTitle\":\"projects_projectsTitle__aBVTi\",\"project\":\"projects_project__297Qq\",\"plus\":\"projects_plus__3WXjt\",\"addProject\":\"projects_addProject__3nH7J\",\"addProjectText\":\"projects_addProjectText__K7SJv\",\"ellipsis\":\"projects_ellipsis__uBJRw\",\"dropdown\":\"projects_dropdown__3wfuy\",\"dropdownItem\":\"projects_dropdownItem__2I4md\",\"dropdownText\":\"projects_dropdownText__1kadi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"forms_input__2yVQI\",\"submit\":\"forms_submit__XNPVt\",\"addTaskForm\":\"forms_addTaskForm__1K2Pm\",\"popupForm\":\"forms_popupForm__2BZ8K\",\"smallSubmit\":\"forms_smallSubmit__1O4YC\",\"link\":\"forms_link__1bIpv\",\"error\":\"forms_error__2hNP8\",\"activationText\":\"forms_activationText__37BJn\",\"cansel\":\"forms_cansel__3gs6L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"popup_popup__8U6Jh\",\"popup-header\":\"popup_popup-header__3Gf3g\",\"popup-title\":\"popup_popup-title__1ty4L\",\"popup-close\":\"popup_popup-close__3lrH_\",\"popup-content\":\"popup_popup-content__1sCpN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"time_inputWrapper__3x3jc\",\"label\":\"time_label__31Xma\",\"input\":\"time_input__1PlE2\",\"warning\":\"time_warning__33jru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"dropdown_dropdown__2pgEr\",\"toggleDropdown\":\"dropdown_toggleDropdown__3o8ZT\",\"contentWrapper\":\"dropdown_contentWrapper__2Izg1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"app_bg__3yXFk\",\"container\":\"app_container__2u_iY\",\"menuWrapper\":\"app_menuWrapper__rlACz\",\"menu\":\"app_menu__28kMM\",\"menuLogo\":\"app_menuLogo__3Dvko\",\"menuText\":\"app_menuText__Q8Upz\",\"menuItem\":\"app_menuItem__2bVWq\",\"mobileMenuBtn\":\"app_mobileMenuBtn__2v_cF\",\"app_holder\":\"app_app_holder__1GDE6\",\"left_menu\":\"app_left_menu__1u6ms\",\"content\":\"app_content__2dzlF\",\"project\":\"app_project__Y4M_t\",\"project__title\":\"app_project__title__vnSFb\",\"plus\":\"app_plus__3DRbw\",\"addTask\":\"app_addTask__39ocb\",\"open\":\"app_open__39deV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"tasks_task__1kF3v\",\"taskText\":\"tasks_taskText__26zqv\",\"finished\":\"tasks_finished__1HuJd\",\"finishedTrue\":\"tasks_finishedTrue__3MI3_\",\"icon\":\"tasks_icon__2fV97\",\"inline\":\"tasks_inline__1cGU6\",\"timeSubmitWrapper\":\"tasks_timeSubmitWrapper__wBixS\",\"timeSubmit\":\"tasks_timeSubmit__2UBQj\",\"disabled\":\"tasks_disabled__11bvR\",\"taskFinished\":\"tasks_taskFinished__-LV2-\",\"taskIconsWrapper\":\"tasks_taskIconsWrapper__3zA5b\",\"dropdownItem\":\"tasks_dropdownItem__124yQ\",\"timeSetted\":\"tasks_timeSetted__3xoGa\"};"],"sourceRoot":""}